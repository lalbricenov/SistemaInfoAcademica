#BlueJ class context
comment0.target=JDBCConnector
comment0.text=\r\n\ Clase\ de\ ejemplo\ para\ explicar\ conexion\ a\ Bases\ de\ Datos\ con\ JDBC\r\n\ Usa\ tres\ formas\ de\ conexion\:\r\n\ 1)\ Clasica\r\n\ 2)\ Pool\ de\ Conexiones\ manual\ usando\ la\ biblioteca\ de\ Apache\r\n\ 3)\ Pool\ de\ Conexiones\ con\ JNDI\ para\ Servidor\r\n\ \r\n\ Tiene\ la\ lista\ de\ Driver\ y\ URL\ de\ varios\ motores\ de\ BD\r\n\ \r\n\ @author\ (Milton\ Jes&uacute;s\ Vera\ Contreras\ -\ miltonjesusvc@ufps.edu.co)\ \r\n\ @version\ 0.0000000000000003\ -->\ 3*Math.sin(Math.PI-Double.MIN_VALUE)\ -->\ \:)\r\n
comment1.params=
comment1.target=JDBCConnector()
comment10.params=sql
comment10.target=java.util.List\ getSelectAsAMap(java.lang.String)
comment10.text=\r\n\ Ejecuta\ sentencias\ SQL\ SELECT\ y\ regresa\ el\ resultado\ como\ un\ Map\r\n
comment11.params=sql
comment11.target=java.lang.String[][]\ getSelectAsAMatrix(java.lang.String)
comment11.text=\r\n\ Ejecuta\ sentencias\ SQL\ SELECT\ y\ regresa\ el\ resultado\ como\ una\ Matriz\ String\r\n
comment12.params=resultset
comment12.target=java.lang.String[]\ getColumns(java.sql.ResultSet)
comment13.params=resultset
comment13.target=java.util.List\ resultSetToMap(java.sql.ResultSet)
comment13.text=\r\n\ Toma\ un\ ResultSet\ y\ lo\ procesa\ dejando\ los\ datos\ en\ un\ LinkedList\ de\ HashMap\r\n\ {{columna,\ valor},\ {columna,\ valor},\ {columna,\ valor},\ {columna,\ valor}},\r\n\ {{columna,\ valor},\ {columna,\ valor},\ {columna,\ valor},\ {columna,\ valor}},\r\n\ {{columna,\ valor},\ {columna,\ valor},\ {columna,\ valor},\ {columna,\ valor}},\r\n\ {{columna,\ valor},\ {columna,\ valor},\ {columna,\ valor},\ {columna,\ valor}},...\r\n\ \r\n
comment14.params=resultset\ columns
comment14.target=java.lang.String[][]\ resultSetToMatrix(java.sql.ResultSet,\ java.lang.String[])
comment14.text=\r\n\ Toma\ un\ ResultSet\ y\ lo\ procesa\ dejando\ los\ datos\ en\ una\ matriz.\r\n\ Asume\ las\ columnas\ del\ array\ String\r\n\ Usa\ resultSetToMap\r\n\ \r\n
comment15.params=
comment15.target=java.lang.String\ getDriver()
comment15.text=GET\ Method\ Propertie\ driver
comment16.params=driver
comment16.target=void\ setDriver(java.lang.String)
comment16.text=SET\ Method\ Propertie\ driver
comment17.params=
comment17.target=java.lang.String\ getUrl()
comment17.text=GET\ Method\ Propertie\ url
comment18.params=url
comment18.target=void\ setUrl(java.lang.String)
comment18.text=SET\ Method\ Propertie\ url
comment19.params=
comment19.target=java.lang.String\ getServer()
comment19.text=GET\ Method\ Propertie\ server
comment2.params=
comment2.target=java.sql.Connection\ getConnection()
comment20.params=server
comment20.target=void\ setServer(java.lang.String)
comment20.text=SET\ Method\ Propertie\ server
comment21.params=
comment21.target=int\ getPort()
comment21.text=GET\ Method\ Propertie\ port
comment22.params=port
comment22.target=void\ setPort(int)
comment22.text=SET\ Method\ Propertie\ port
comment23.params=
comment23.target=java.lang.String\ getDatabase()
comment23.text=GET\ Method\ Propertie\ database
comment24.params=database
comment24.target=void\ setDatabase(java.lang.String)
comment24.text=SET\ Method\ Propertie\ database
comment25.params=
comment25.target=java.lang.String\ getUser()
comment25.text=GET\ Method\ Propertie\ user
comment26.params=user
comment26.target=void\ setUser(java.lang.String)
comment26.text=SET\ Method\ Propertie\ user
comment27.params=
comment27.target=java.lang.String\ getPassword()
comment27.text=GET\ Method\ Propertie\ password
comment28.params=password
comment28.target=void\ setPassword(java.lang.String)
comment28.text=SET\ Method\ Propertie\ password
comment29.params=
comment29.target=java.lang.String\ getJndiLookupNameApp()
comment29.text=GET\ Method\ Propertie\ jndiLookupNameApp
comment3.params=
comment3.target=java.sql.Connection\ getClassicConnection()
comment30.params=jndiLookupNameApp
comment30.target=void\ setJndiLookupNameApp(java.lang.String)
comment30.text=SET\ Method\ Propertie\ jndiLookupNameApp
comment31.params=
comment31.target=java.lang.String\ getJndiLookupNameDB()
comment31.text=GET\ Method\ Propertie\ jndiLookupNameDB
comment32.params=jndiLookupNameDB
comment32.target=void\ setJndiLookupNameDB(java.lang.String)
comment32.text=SET\ Method\ Propertie\ jndiLookupNameDB
comment33.params=
comment33.target=int\ getMaxTotal()
comment33.text=GET\ Method\ Propertie\ maxTotal
comment34.params=maxTotal
comment34.target=void\ setMaxTotal(int)
comment34.text=SET\ Method\ Propertie\ maxTotal
comment35.params=
comment35.target=int\ getMaxIdle()
comment35.text=GET\ Method\ Propertie\ maxIdle
comment36.params=maxIdle
comment36.target=void\ setMaxIdle(int)
comment36.text=SET\ Method\ Propertie\ maxIdle
comment37.params=
comment37.target=int\ getMinIdle()
comment37.text=GET\ Method\ Propertie\ minIdle
comment38.params=minIdle
comment38.target=void\ setMinIdle(int)
comment38.text=SET\ Method\ Propertie\ minIdle
comment39.params=
comment39.target=int\ getMaxWaitMillis()
comment39.text=GET\ Method\ Propertie\ maxWaitMillis
comment4.params=
comment4.target=java.sql.Connection\ getManualPoolConnection()
comment40.params=maxWaitMillis
comment40.target=void\ setMaxWaitMillis(int)
comment40.text=SET\ Method\ Propertie\ maxWaitMillis
comment41.params=
comment41.target=boolean\ isAutoCommit()
comment41.text=GET\ Method\ Propertie\ autoCommit
comment42.params=autoCommit
comment42.target=void\ setAutoCommit(boolean)
comment42.text=SET\ Method\ Propertie\ autoCommit
comment5.params=
comment5.target=java.sql.Connection\ getServerPoolConnection()
comment6.params=
comment6.target=void\ close()
comment7.params=resultset
comment7.target=void\ close(java.sql.ResultSet)
comment8.params=sql
comment8.target=java.sql.ResultSet\ executeSelect(java.lang.String)
comment8.text=\r\n\ Ejecuta\ sentencias\ SQL\ SELECT\ y\ regresa\ el\ resultado\ como\ un\ ResultSet\r\n
comment9.params=sql
comment9.target=int\ executeInserUpdateOrDelete(java.lang.String)
comment9.text=\r\n\ Ejecuta\ INSERT,\ UPDATE\ o\ DELETE\r\n\ Regresa\ un\ numero\ con\ la\ cantidad\ de\ registros\ afectados\r\n
numComments=43
